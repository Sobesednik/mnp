{"version":3,"sources":["../../src/lib/git.js"],"names":["git","args","cwd","noPipe","a","Array","isArray","split","promise","stdout","stderr","pipe","process","res","module","exports"],"mappings":";;AAAA;;;;AAEA;;;;;;AAMA,eAAeA,GAAf,CAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,SAAS,KAAvC,EAA8C;AAC5C,MAAIC,CAAJ;;AACA,MAAIC,MAAMC,OAAN,CAAcL,IAAd,CAAJ,EAAyB;AACvBG,QAAIH,IAAJ;AACD,GAFD,MAEO,IAAI,OAAOA,IAAP,IAAe,QAAnB,EAA6B;AAClCG,QAAIH,KAAKM,KAAL,CAAW,GAAX,CAAJ;AACD;;AACD,QAAM;AAAEC,WAAF;AAAWC,UAAX;AAAmBC;AAAnB,MAA8B,2BAAM,KAAN,EAAaN,CAAb,EAAgBF,MAAM;AAAEA;AAAF,GAAN,GAAgB,EAAhC,CAApC;;AACA,MAAI,CAACC,MAAL,EAAa;AACXM,WAAOE,IAAP,CAAYC,QAAQH,MAApB;AACAC,WAAOC,IAAP,CAAYC,QAAQF,MAApB;AACD;;AACD,QAAMG,MAAM,MAAML,OAAlB;AACA,SAAOK,GAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBf,GAAjB","sourcesContent":["import spawn from 'spawncommand'\n\n/**\n * Run a git command.\n * @param {string|string[]} args arguments to pass to git executable\n * @param {string} [cwd] working directory\n * @param {boolean} [noPipe=false] whether not to print to stdout and stderr\n */\nasync function git(args, cwd, noPipe = false) {\n  let a\n  if (Array.isArray(args)) {\n    a = args\n  } else if (typeof args == 'string') {\n    a = args.split(' ')\n  }\n  const { promise, stdout, stderr } = spawn('git', a, cwd ? { cwd } : {})\n  if (!noPipe) {\n    stdout.pipe(process.stdout)\n    stderr.pipe(process.stderr)\n  }\n  const res = await promise\n  return res\n}\n\nmodule.exports = git\n"],"file":"git.js"}