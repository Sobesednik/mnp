{"version":3,"sources":["../../src/lib/index.js"],"names":[],"mappings":"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","file":"lib/index.js","sourcesContent":["import { resolve } from 'path'\nimport spawn, { fork } from 'spawncommand'\nimport { existsSync } from 'fs'\n\nconst error = (text) => {\n  const err = new Error(text)\n  err.controlled = true\n  throw err\n}\n\nexport const getStructure = (name = 'package') => {\n  let path\n  try {\n    path = require(`mnp-${name}`)\n  } catch (err) {\n    try {\n      path = require(`@mnpjs/${name}`)\n    } catch (e) {\n      error(`Could not require structure \"${name}\".`)\n    }\n  }\n  const structure = resolve(path, 'structure')\n  const { mnp: scripts = {} } = require(`${path}/package.json`)\n  return {\n    scripts,\n    structure,\n    structurePath: path,\n  }\n}\n\nexport const create = async (path, structurePath, script) => {\n  if (Array.isArray(script)) {\n    await Promise.all(script.map(s => runOnCreate(path, structurePath, s)))\n  } else {\n    await runOnCreate(path, structurePath, script)\n  }\n}\n\n/**\n * @param {string} cwd The directory in which to execute the script.\n * @param {string} structurePath The path to the structure.\n * @param {string} script The string with a script and its arguments.\n */\nexport const runOnCreate = async (cwd, structurePath, script) => {\n  const oc = resolve(structurePath, script)\n  if (existsSync(oc)) {\n    await fork(oc, [], {\n      cwd,\n      stdio: 'inherit',\n      execArgv: [],\n    })\n  } else {\n    await spawn(script, [], {\n      cwd,\n      stdio: 'inherit',\n    })\n  }\n}"]}