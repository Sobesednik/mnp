{"version":3,"sources":["../../src/lib/git-lib.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,YAAY;;AAE/B,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC3D,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;EACrB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/B,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;EAC/C;AACF","file":"lib/git-lib.js","sourcesContent":["import spawn from 'spawncommand'\n\nexport const assertNotInGitPath = async () => {\n  const { promise } = spawn('git', ['rev-parse', '--git-dir'])\n  const gitRes = await promise\n  if (/\\.git/.test(gitRes.stdout)) {\n    throw new Error('Current dir is in git path!')\n  }\n}\n\n"]}