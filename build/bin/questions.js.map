{"version":3,"sources":["../../src/bin/questions.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;;AAE3B,MAAM,CAAC,OAAO,CAAC;EACb,KAAK,CAAC,CAAC;IACL,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IAC3B,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;MACzC;IACF,CAAC;EACH,CAAC;EACD,GAAG,CAAC,CAAC;IACH,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;IAC3B,YAAY,CAAC,CAAC,IAAI;EACpB,CAAC;EACD,KAAK,CAAC,CAAC;IACL,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;IACjB,WAAW,CAAC,CAAC,CAAC,CAAC;MACb,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;MACf,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IACD,YAAY,CAAC,CAAC,IAAI;EACpB,CAAC;EACD,IAAI,CAAC,CAAC;IACJ,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;MACjB,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;MAC3D,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;IACrB,CAAC;IACD,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;EACd,CAAC;EACD,KAAK,CAAC,CAAC;IACL,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;MACjB,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;MAC5D,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;IACrB,CAAC;IACD,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;EACf,CAAC;EACD,OAAO,CAAC,CAAC;IACP,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC5B,YAAY,CAAC,CAAC,IAAI;EACpB,CAAC;EACD,SAAS,CAAC,CAAC;IACT,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC9B,YAAY,CAAC,CAAC,IAAI;EACpB,CAAC;EACD,SAAS,CAAC,CAAC;IACT,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAChC,YAAY,CAAC,CAAC,IAAI;EACpB,CAAC;AACH","file":"bin/questions.js","sourcesContent":["import git from '../lib/git'\n\nexport default {\n  token: {\n    text: 'GitHub access token',\n    validation: (a) => {\n      if (!a) {\n        throw new Error('Please specify token.')\n      }\n    },\n  },\n  org: {\n    text: 'GitHub organisation',\n    defaultValue: null,\n  },\n  scope: {\n    text: 'npm scope',\n    postProcess(v) {\n      if (!v) return v\n      return v.replace(/^@/, '')\n    },\n    defaultValue: null,\n  },\n  name: {\n    async getDefault() {\n      const { stdout } = await git('config user.name', null, true)\n      return stdout.trim()\n    },\n    text: 'user',\n  },\n  email: {\n    async getDefault() {\n      const { stdout } = await git('config user.email', null, true)\n      return stdout.trim()\n    },\n    text: 'email',\n  },\n  website: {\n    text: 'Website (for readme)',\n    defaultValue: null,\n  },\n  trademark: {\n    text: 'Trademark (for readme)',\n    defaultValue: null,\n  },\n  legalName: {\n    text: 'Legal name (for license)',\n    defaultValue: null,\n  },\n}\n"]}