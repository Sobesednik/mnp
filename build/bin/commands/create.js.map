{"version":3,"sources":["../../../src/bin/commands/create.js"],"names":[],"mappings":"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","file":"bin/commands/create.js","sourcesContent":["import { resolve } from 'path'\nimport { assertDoesNotExist } from 'wrote'\nimport { c, b } from 'erte'\nimport { askSingle } from 'reloquent'\nimport cloneSource from '../../lib/clone-source'\nimport git from '../../lib/git'\nimport { assertNotInGitPath } from '../../lib/git-lib'\nimport { getStructure, create } from '../../lib'\n\nconst getDescription = async (description) => {\n  if (description) return description\n  const res = await askSingle({\n    text: 'Description',\n    postProcess: s => s.trim(),\n    defaultValue: '',\n  })\n  return res\n}\n\nconst getPackageNameWithScope = (packageName, scope) => {\n  return `${scope ? `@${scope}/` : ''}${packageName}`\n}\n\n/** @param {import('../../lib/sign-in').Settings} settings */\nconst runCreate = async (settings, {\n  name,\n  struct,\n  github,\n  description: _description,\n}) => {\n  await assertNotInGitPath()\n\n  const {\n    org,\n    website,\n    scope,\n    name: userName,\n    email,\n    legalName,\n    trademark,\n  } = settings\n  const packageName = getPackageNameWithScope(name, scope)\n  const { structure, scripts, structurePath } = getStructure(struct)\n  const { onCreate } = scripts\n\n  const path = resolve(name)\n  await assertDoesNotExist(path)\n\n  console.log(`# ${packageName}`)\n\n  const description = await getDescription(_description)\n\n  const {\n    ssh_url: sshUrl,\n    git_url: gitUrl,\n    html_url: htmlUrl,\n  } = await github.repos.create({\n    name,\n    org,\n    description,\n    auto_init: true,\n    gitignore_template: 'Node',\n    homepage: website,\n    license_template: 'mit',\n  })\n\n  if (!sshUrl) throw new Error('GitHub repository was not created via the API.')\n\n  await github.activity.star(org, name)\n  console.log(\n    '%s\\n%s',\n    c('Created and starred a new repository', 'grey'),\n    b(htmlUrl, 'green'),\n  )\n\n  const readmeUrl = `${htmlUrl}#readme`\n  const issuesUrl = `${htmlUrl}/issues`\n\n  await git(['clone', sshUrl, path])\n\n  console.log('Setting user %s<%s>...', userName, email)\n  await git(['config', 'user.name', userName], path)\n  await git(['config', 'user.email', email], path)\n\n  await cloneSource(structure, path, {\n    org,\n    name,\n    scope,\n    packageName,\n    website,\n    authorName: userName,\n    authorEmail: email,\n    issuesUrl,\n    readmeUrl,\n    gitUrl,\n    description,\n    legalName,\n    trademark,\n  })\n\n  await git('add .', path, true)\n  await git(['commit', '-m', 'initialise package'], path, true)\n  console.log('Initialised package structure, pushing.')\n  await git('push origin master', path, true)\n\n  if (onCreate) {\n    await create(path, structurePath, onCreate)\n  }\n\n  console.log('Created a new package: %s.', c(packageName, 'green'))\n}\n\nexport default runCreate"]}