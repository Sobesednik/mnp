{"version":3,"sources":["../../src/bin/index.js"],"names":[],"mappings":"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","file":"bin/index.js","sourcesContent":["#!/usr/bin/env node\nimport { resolve } from 'path'\nimport { assertDoesNotExist } from 'wrote'\nimport { askSingle } from 'reloquent'\nimport argufy from 'argufy'\nimport { c, b } from 'erte'\nimport getUsage from './usage'\nimport cloneSource from '../lib/clone-source'\nimport git from '../lib/git'\nimport { assertNotInGitPath } from '../lib/git-lib'\nimport { createRepository, starRepository, deleteRepository } from '../lib/github'\nimport { getStructure, create } from '../lib'\nimport info from '../lib/info'\nimport signIn from '../lib/sign-in'\nimport { version } from '../../package.json'\n\nconst {\n  struct, help, name: _name, check, delete: _delete, init, desc: _description,\n  version: _version,\n} = argufy({\n  struct: 's',\n  help: { short: 'h', boolean: true },\n  desc: { short: 'D' },\n  name: { command: true },\n  version: { short: 'v', boolean: true },\n  check: { short: 'c', boolean: true },\n  delete: { short: 'd', boolean: true },\n  init: { short: 'I', boolean: true },\n})\n\nif (_version) {\n  console.log(version)\n  process.exit()\n}\n\nconst ANSWER_TIMEOUT = null\n\nconst makeGitLinks = (org, name) => ({\n  ssh_url: `git://github.com/${org}/${name}.git`,\n  git_url: 123,\n  html_url: `https://github.com/${org}/${name}#readme`,\n})\n\nif (help) {\n  const u = getUsage()\n  console.log(u)\n  process.exit()\n}\n\nconst getPackageNameWithScope = (packageName, scope) => {\n  return `${scope ? `@${scope}/` : ''}${packageName}`\n}\n\n(async () => {\n  try {\n    if (init) {\n      await signIn(true)\n      return\n    }\n\n    const name = _name || await askSingle({\n      text: 'Package name',\n      validation(a) {\n        if (!a) throw new Error('You must specify the package name.')\n      },\n    }, ANSWER_TIMEOUT)\n\n    if (check) {\n      console.log('Checking package %s...', name)\n      const available = await info(name)\n      console.log('Package named %s is %s.', available ? c(name, 'green') : c(name, 'red'), available ? 'available' : 'taken')\n      return\n    }\n\n    const { structure, scripts, structurePath } = getStructure(struct)\n    const { onCreate } = scripts\n\n    const {\n      org, token, name: userName, email, website, legalName, trademark, scope,\n    } = await signIn()\n\n    const packageName = getPackageNameWithScope(name, scope)\n\n    if (_delete) {\n      const y = await askSingle(`Are you sure you want to delete ${packageName}?`)\n      if (y != 'y') return\n      await deleteRepository(token, name, org)\n      console.log('Deleted %s/%s.', org, name)\n      return\n    }\n\n    const path = resolve(name)\n    await assertDoesNotExist(path)\n\n    await assertNotInGitPath()\n\n    console.log(`# ${packageName}`)\n\n    const description = _description || await askSingle({\n      text: 'Description',\n      postProcess: s => s.trim(),\n      defaultValue: '',\n    }, ANSWER_TIMEOUT)\n\n    const {\n      ssh_url: sshUrl,\n      git_url: gitUrl,\n      html_url: htmlUrl,\n    } = await createRepository(token, name, org, description)\n\n    if (!sshUrl) throw new Error('GitHub repository was not created via API.')\n\n    await starRepository(token, name, org)\n    console.log('%s\\n%s', c('Created and starred a new repository', 'grey'), b(htmlUrl, 'green'))\n\n    const readmeUrl = `${htmlUrl}#readme`\n    const issuesUrl = `${htmlUrl}/issues`\n\n    await git(['clone', sshUrl, path])\n\n    console.log('Setting user %s<%s>...', userName, email)\n    await git(['config', 'user.name', userName], path)\n    await git(['config', 'user.email', email], path)\n\n    await cloneSource(structure, path, {\n      org,\n      name,\n      scope,\n      packageName,\n      website,\n      authorName: userName,\n      authorEmail: email,\n      issuesUrl,\n      readmeUrl,\n      gitUrl,\n      description,\n      legalName,\n      trademark,\n    })\n\n    await git('add .', path, true)\n    await git(['commit', '-m', 'initialise package'], path, true)\n    console.log('Initialised package structure, pushing.')\n    await git('push origin master', path, true)\n\n    if (onCreate) {\n      await create(path, structurePath, onCreate)\n    }\n\n    console.log('Created a new package: %s.', c(packageName, 'green'))\n  } catch ({ controlled, message, stack }) {\n    if (controlled) {\n      console.error(message)\n    } else {\n      console.error(stack)\n    }\n    process.exit(1)\n  }\n})()\n"]}